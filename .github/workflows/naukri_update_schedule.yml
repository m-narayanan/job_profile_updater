# .github/workflows/naukri_update_schedule.yml

# A descriptive name for your workflow, shown in the GitHub Actions tab
name: Daily Naukri Profile Update

# Specifies the events that trigger this workflow
on:
  schedule:
    # Runs using POSIX cron syntax. This runs at 9:00 AM UTC every day.
    # Minute Hour Day(month) Month Day(week)
    # Adjust '9' if your 9 AM is different from UTC (e.g., '14' for 9 AM EST)
    # Use https://crontab.guru/ to verify your cron schedule.
    - cron: '0 9 * * *'

  # Allows you to manually run this workflow from the Actions tab on GitHub.
  # Useful for testing without waiting for the schedule.
  workflow_dispatch:

# Defines the jobs to be executed in the workflow. We only need one job.
jobs:
  # An identifier for the job (can be anything, e.g., 'build', 'update')
  update_naukri_profile:

    # Specifies the type of virtual machine to run the job on.
    # 'ubuntu-latest' is a standard, free Linux environment.
    runs-on: ubuntu-latest

    # Contains the sequence of tasks (steps) that make up the job.
    steps:
      # Step 1: Check out your repository code
      # This action downloads your repository content onto the runner.
      - name: Checkout Repository
        uses: actions/checkout@v4 # Uses a pre-built action

      # Step 2: Set up the Python environment
      # Installs the specified Python version on the runner.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Specify the Python version you developed/tested with

      # Step 3: Install Google Chrome Browser
      # Selenium needs an actual browser installed on the runner.
      - name: Install Google Chrome
        run: |
          # Commands to install Chrome on the Ubuntu runner
          sudo apt-get update -y
          sudo apt-get install -y google-chrome-stable
          echo "Google Chrome installation step completed."

      # Step 4: Install Python dependencies
      # Installs packages listed in your requirements.txt file.
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # webdriver-manager will run here (if needed during script execution)
          # and download the correct ChromeDriver for the Chrome installed in the previous step.

      # Step 5: Run your Python script
      # Executes your main.py script.
      - name: Run Profile Update Script
        env:
          # This section securely maps the GitHub Secrets you created
          # to environment variables available to your Python script.
          # config.py uses os.getenv() to read these.
          NAUKRI_USERNAME: ${{ secrets.NAUKRI_USERNAME }}
          NAUKRI_PASSWORD: ${{ secrets.NAUKRI_PASSWORD }}
          # If you add other sites, add their secrets here:
          # ANOTHER_SITE_USERNAME: ${{ secrets.ANOTHER_SITE_USERNAME }}
        run: |
          echo "Current directory:"
          pwd
          echo "Listing files:"
          ls -l
          echo "Executing Python script..."
          # The command to run your script
          python main.py

      # Step 6 (Optional but Recommended): Upload Debug Artifacts on Failure
      # If any previous step fails, this step will run.
      # It bundles specified files (logs, screenshots) into an artifact
      # that you can download from the workflow run page.
      - name: Upload logs and screenshot on failure
        if: failure() # This condition ensures the step runs only if the job failed
        uses: actions/upload-artifact@v4
        with:
          # Name of the artifact zip file that will be created
          name: naukri-update-failure-artifacts
          # Files or directories to include in the artifact.
          # Use patterns that match your log and screenshot files.
          path: |
            *.log
            *.png
            # You could add requirements.txt or other files if helpful
          # How long to keep the artifact (max 90 days for free tier, default is short)
          retention-days: 7